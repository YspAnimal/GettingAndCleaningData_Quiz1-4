key = "045861995b1c4757e7a8",
secret = "be0e8735b1f28d210dd7d42dc5c45fba28985679")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/users/jtleek/repos", gtoken)
stop_for_status(req)
?oauth_endpoints
library(httr)
library(httpuv)
oauth_endpoints("github")
myapp <- oauth_app("R",
key = "045861995b1c4757e7a8",
secret = "be0e8735b1f28d210dd7d42dc5c45fba28985679")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/users/jtleek/repos", gtoken)
library(httr)
library(httpuv)
# 1. Find OAuth settings for github:
#    http://developer.github.com/v3/oauth/
oauth_endpoints("github")
myapp <- oauth_app("R",
key = "045861995b1c4757e7a8",
secret = "be0e8735b1f28d210dd7d42dc5c45fba28985679")
# 3. Get OAuth credentials
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/users/jtleek/repos", gtoken)
stop_for_status(req)
content(req)
req <- with_config(gtoken, GET("https://api.github.com/rate_limit"))
stop_for_status(req)
install.packages("readr")
library(readr)
install.packages("readr")
library(readr)
x <- read.fwf(
file=url("http://www.cpc.ncep.noaa.gov/data/indices/wksst8110.for"),
skip=4,
widths=c(12, 7,4, 9,4, 9,4, 9,4))
install.packages("readr")
library(readr)
install.packages("readr")
library(readr)
x <- read.fwf(
file=url("http://www.cpc.ncep.noaa.gov/data/indices/wksst8110.for"),
skip=4,
widths=c(12, 7,4, 9,4, 9,4, 9,4))
View(x)
colsum?
?colsum
?colsumm
cumsum(x[,4])
x <- read.fwf(
file=url("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for"),
skip=4,
widths=c(12, 7,4, 9,4, 9,4, 9,4))
cumsum(x[,4])
library(httr)
library(httpuv)
library(base64enc)
library(jsonlite)
oauth_endpoints("github")
# 2. To make your own application, register at at
#    https://github.com/settings/applications. Use any URL for the homepage URL
#    (http://github.com is fine) and  http://localhost:1410 as the callback url
#
#    Replace your key and secret below.
myapp <- oauth_app("github",
key = "045861995b1c4757e7a8",
secret = "be0e8735b1f28d210dd7d42dc5c45fba28985679")
library(httr)
library(httpuv)
library(base64enc)
library(jsonlite)
# 1. Find OAuth settings for github:
#    http://developer.github.com/v3/oauth/
oauth_endpoints("github")
# 2. To make your own application, register at at
#    https://github.com/settings/applications. Use any URL for the homepage URL
#    (http://github.com is fine) and  http://localhost:1410 as the callback url
#
#    Replace your key and secret below.
myapp <- oauth_app("github",
key = "045861995b1c4757e7a8",
secret = "be0e8735b1f28d210dd7d42dc5c45fba28985679")
# 3. Get OAuth credentials
github_token <- oauth1.0_token(oauth_endpoints("github"), myapp)
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/users/jtleek/repos", gtoken)
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/users/jtleek/repos", gtoken)
stop_for_status(req)
library(httr)
library(httpuv)
library(base64enc)
library(jsonlite)
# 1. Find OAuth settings for github:
#    http://developer.github.com/v3/oauth/
oauth_endpoints("github")
# 2. To make your own application, register at at
#    https://github.com/settings/applications. Use any URL for the homepage URL
#    (http://github.com is fine) and  http://localhost:1410 as the callback url
#
#    Replace your key and secret below.
myapp <- oauth_app("R",
key = "045861995b1c4757e7a8",
secret = "be0e8735b1f28d210dd7d42dc5c45fba28985679")
# 3. Get OAuth credentials
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
# 4. Use API
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/users/jtleek/repos", gtoken)
stop_for_status(req)
content(req)
req <- with_config(gtoken, GET("https://api.github.com/rate_limit"))
stop_for_status(req)
content(req)
library(httr)
library(httpuv)
library(base64enc)
library(jsonlite)
# 1. Find OAuth settings for github:
#    http://developer.github.com/v3/oauth/
oauth_endpoints("github")
# 2. To make your own application, register at at
#    https://github.com/settings/applications. Use any URL for the homepage URL
#    (http://github.com is fine) and  http://localhost:1410 as the callback url
#
#    Replace your key and secret below.
myapp <- oauth_app("R",
key = "045861995b1c4757e7a8",
secret = "fd6b9f3605d66513a23080a1ecd8721da97c3dfa")
# 3. Get OAuth credentials
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
# 4. Use API
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/users/jtleek/repos", gtoken)
stop_for_status(req)
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/users/jtleek/repos", gtoken)
stop_for_status(req)
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/users/jtleek/repos", gtoken)
stop_for_status(req)
oauth_endpoints("github")
myapp <- oauth_app("R",
key = "045861995b1c4757e7a8",
secret = "fd6b9f3605d66513a23080a1ecd8721da97c3dfa")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/users/jtleek/repos", gtoken)
stop_for_status(req)
content(req)
req <- with_config(gtoken, GET("https://api.github.com/rate_limit"))
stop_for_status(req)
content(req)
library(httr)
library(httpuv)
library(base64enc)
library(jsonlite)
oauth_endpoints("github")
myapp <- oauth_app("R",
key = "045861995b1c4757e7a8",
secret = "fd6b9f3605d66513a23080a1ecd8721da97c3dfa")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/users/jtleek/repos", gtoken)
stop_for_status(req)
library(httr)
library(httpuv)
library(base64enc)
library(jsonlite)
oauth_endpoints("github")
myapp <- oauth_app("R",
key = "045861995b1c4757e7a8",
secret = "fd6b9f3605d66513a23080a1ecd8721da97c3dfa")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/users/jtleek/repos", gtoken)
req <- with_config(gtoken, GET("https://api.github.com/users/jtleek/repos"))
stop_for_status(req)
library(httr)
library(httpuv)
library(base64enc)
library(jsonlite)
oauth_endpoints("github")
# 2. To make your own application, register at at
#    https://github.com/settings/applications. Use any URL for the homepage URL
#    (http://github.com is fine) and  http://localhost:1410 as the callback url
#
#    Replace your key and secret below.
myapp <- oauth_app("R",
key = "045861995b1c4757e7a8",
secret = "fd6b9f3605d66513a23080a1ecd8721da97c3dfa")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp, cache = FALSE)
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/users/jtleek/repos", gtoken)
stop_for_status(req)
content(req)
req <- with_config(gtoken, GET("https://api.github.com/users/jtleek/repos"))
stop_for_status(req)
oauth_endpoints("github")
# 2. To make your own application, register at at
#    https://github.com/settings/applications. Use any URL for the homepage URL
#    (http://github.com is fine) and  http://localhost:1410 as the callback url
#
#    Replace your key and secret below.
myapp <- oauth_app("R",
key = "045861995b1c4757e7a8",
secret = "fd6b9f3605d66513a23080a1ecd8721da97c3dfa")
# 3. Get OAuth credentials
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp, cache = FALSE)
library(httr)
library(httpuv)
library(base64enc)
library(jsonlite)
# 1. Find OAuth settings for github:
#    http://developer.github.com/v3/oauth/
oauth_endpoints("github")
# 2. To make your own application, register at at
#    https://github.com/settings/applications. Use any URL for the homepage URL
#    (http://github.com is fine) and  http://localhost:1410 as the callback url
#
#    Replace your key and secret below.
myapp <- oauth_app("R",
key = "045861995b1c4757e7a8",
secret = "fd6b9f3605d66513a23080a1ecd8721da97c3dfa")
# 3. Get OAuth credentials
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp, cache = FALSE)
# 4. Use API
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/users/jtleek/repos", gtoken)
stop_for_status(req)
library(httr)
library(httpuv)
library(base64enc)
library(jsonlite)
# 1. Find OAuth settings for github:
#    http://developer.github.com/v3/oauth/
oauth_endpoints("github")
# 2. To make your own application, register at at
#    https://github.com/settings/applications. Use any URL for the homepage URL
#    (http://github.com is fine) and  http://localhost:1410 as the callback url
#
#    Replace your key and secret below.
myapp <- oauth_app("R",
key = "045861995b1c4757e7a8",
secret = "fd6b9f3605d66513a23080a1ecd8721da97c3dfa")
# 3. Get OAuth credentials
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp, cache = FALSE)
# 4. Use API
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/users/jtleek/repos", gtoken)
stop_for_status(req)
# 1. Find OAuth settings for github:
#    http://developer.github.com/v3/oauth/
oauth_endpoints("github")
# 2. To make your own application, register at at
#    https://github.com/settings/applications. Use any URL for the homepage URL
#    (http://github.com is fine) and  http://localhost:1410 as the callback url
#
#    Replace your key and secret below.
myapp <- oauth_app("github",
key = "045861995b1c4757e7a8",
secret = "fd6b9f3605d66513a23080a1ecd8721da97c3dfa")
# 3. Get OAuth credentials
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp, cache = FALSE)
# 4. Use API
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/users/jtleek/repos", gtoken)
stop_for_status(req)
library(httr)
library(httpuv)
library(base64enc)
library(jsonlite)
oauth_endpoints("github")
myapp <- oauth_app("github",
key = "045861995b1c4757e7a8",
secret = "fd6b9f3605d66513a23080a1ecd8721da97c3dfa")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp, cache = FALSE)
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/users/jtleek/repos", gtoken)
stop_for_status(req)
library(httr)
library(httpuv)
library(base64enc)
library(jsonlite)
oauth_endpoints("github")
myapp <- oauth_app("github",
key = "045861995b1c4757e7a8",
secret = "fd6b9f3605d66513a23080a1ecd8721da97c3dfa")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp, cache = FALSE)
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp, cache = FALSE)
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/users/jtleek/repos", gtoken)
library(httr)
library(httpuv)
library(base64enc)
library(jsonlite)
# 1. Find OAuth settings for github:
#    http://developer.github.com/v3/oauth/
oauth_endpoints("github")
# 2. To make your own application, register at at
#    https://github.com/settings/applications. Use any URL for the homepage URL
#    (http://github.com is fine) and  http://localhost:1410 as the callback url
#
#    Replace your key and secret below.
myapp <- oauth_app("R",
key = "045861995b1c4757e7a8",
secret = "fd6b9f3605d66513a23080a1ecd8721da97c3dfa")
# 3. Get OAuth credentials
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp, cache = FALSE)
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/users/jtleek/repos", gtoken)
stop_for_status(req)
req <- GET("https://api.github.com/users/jtleek/repos", token = "74d924291fc15a8122e329bcfdb9dc33c158f205")
stop_for_status(req)
content(req)
req$created_at
library(XML)
url <- "http://biostat.jhsph.edu/~jleek/contact.html"
con <- url(url)
readFile <- readLines(con)
close(con)
destFile <- "Quiz24.html"
download.file(url, destfile = destFile, mode='wb')
readf <- file(destFile)
nchar(readFile[10])
nchar(readFile[20])
nchar(readFile[30])
nchar(readFile[100])
install.packages("readr")
library(readr)
x <- read.fwf(
file=url("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for"),
skip=4,
widths=c(12, 7,4, 9,4, 9,4, 9,4))
cumsum(x[, 4])
names(req)
names(req$headers)
result <- fromJSON(req)
result <- fromJSON("https://api.github.com/users/jtleek/repos")
names(result)
names(result$repos)
result$repos
result$name
result$name["datasharing"]
result["datasharing"]
result[,"datasharing"]
result$datasharing
result$name$datasharing
head(result)
result$datasharing
result$name
result$name["datasharing"]
result["datasharing"]
names(result$name)
result$name
cat(result)
cat(result$name)
cat(result$name$datashering)
head(result, 7)
head(result[, c("name", "created_at")], 7)
setwd("C:/Users/soloveynv/Documents/R Scripts/GettingAndCleaningData_Quiz1")
URL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
destFile <- "Quiz3-1Dataset.csv"
if (!file.exists(destFile)){
download.file(URL, destfile = destFile, mode='wb')
}
DT <- fread("dFile5.scv")
library(data.table)
library(sqldf)
setwd("C:/Users/soloveynv/Documents/R Scripts/GettingAndCleaningData_Quiz1")
URL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
destFile <- "Quiz3-1Dataset.csv"
if (!file.exists(destFile)){
download.file(URL, destfile = destFile, mode='wb')
}
DT <- fread("dFile5.scv")
library(data.table)
library(sqldf)
setwd("C:/Users/soloveynv/Documents/R Scripts/GettingAndCleaningData_Quiz1")
URL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
destFile <- "Quiz3-1Dataset.csv"
if (!file.exists(destFile)){
download.file(URL, destfile = destFile, mode='wb')
}
DT <- fread(destFile)
View(DT)
DT[which(DT$ACR>=3 | DT$AGS>=6)]
DT[which(DT$ACR>=3 & DT$AGS>=6)]
DT[which(DT$ACR>=3 & DT$AGS>=6)]
which(c(DT$ACR>=3, DT$AGS>=6))
which(c(DT$ACR>3, DT$AGS>6))
which(c(DT$ACR=3, DT$AGS=6))
which(c(DT$ACR==3, DT$AGS==6))
library(data.table)
library(sqldf)
setwd("C:/Users/soloveynv/Documents/R Scripts/GettingAndCleaningData_Quiz1")
URL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
destFile <- "Quiz3-1Dataset.csv"
if (!file.exists(destFile)){
download.file(URL, destfile = destFile, mode='wb')
}
DT <- fread(destFile)
which(c(DT$ACR==3, DT$AGS==6))
agricultureLogical <- DT$ACR==3&DT$AGS==6
which(agricultureLogical)
install.packages("jpeg")
library(jpeg)
?read
readJPEG
?readJPEG
SourceURL<-"https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg"
rjpg <- readJPEG(SourceURL, native = T)
SourceURL<-"https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg"
destFile <- "getdataFjeff.jpg"
if (!file.exists(destFile)){
download.file(SourceURL, destfile = destFile, mode='wb')
}
rjpg <- readJPEG(destFile, native = T)
rjpg
summary(rjpg)
as.vector(rjpg)
?quantile
quantile(as.vector(rjpg), probs = c(0.3, 0.8))
setwd("C:/Users/soloveynv/Documents/R Scripts/GettingAndCleaningData_Quiz1")
Source1URL<-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
Source2URL<-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv"
countriesData <- "dataFGDP.csv"
eduData <- "EDSTATS_Country.csv"
if (!file.exists(destFile)){
download.file(Source1URL, destfile = countriesData, mode='wb')
download.file(Source2URL, destfile = eduData, mode='wb')
}
if ((!file.exists(countriesData))&(!file.exists(eduData))){
download.file(Source1URL, destfile = countriesData, mode='wb')
download.file(Source2URL, destfile = eduData, mode='wb')
}
library(data.table)
library(data.table)
countriesDataSet <- fread(countriesData)
eduDataSet <- fread(eduData)
View(countriesDataSet)
?fread
countriesDataSet <- fread(countriesData, header = T)
eduDataSet <- fread(eduData, header = T)
countriesDataSet <- fread(countriesData, header = T)
eduDataSet <- fread(eduData, header = T)
View(countriesDataSet)
View(eduDataSet)
?match
eduDataSet$CoutryCode
table(countriesDataSet$V1 in eduDataSet$CountryCode)
table(countriesDataSet$V1 %in% eduDataSet$CountryCode)
countriesDataSet <- read.csv(countriesData)
eduDataSet <- read.csv(eduData)
View(countriesDataSet)
View(eduDataSet)
?read.csv
table(countriesDataSet$V1 %in% eduDataSet$CountryCode)
library(data.table)
setwd("C:/Users/soloveynv/Documents/R Scripts/GettingAndCleaningData_Quiz1")
Source1URL<-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
Source2URL<-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv"
countriesData <- "dataFGDP.csv"
eduData <- "EDSTATS_Country.csv"
if ((!file.exists(countriesData))&(!file.exists(eduData))){
download.file(Source1URL, destfile = countriesData, mode='wb')
download.file(Source2URL, destfile = eduData, mode='wb')
}
countriesDataSet <- read.csv(countriesData)
eduDataSet <- read.csv(eduData)
table(countriesDataSet$V1 %in% eduDataSet$CountryCode)
View(countriesDataSet)
table(countriesDataSet$X1 %in% eduDataSet$CountryCode)
View(eduDataSet)
table(countriesDataSet$X %in% eduDataSet$CountryCode)
countriesDataSet <- read.csv(countriesData, skip = 4)
View(countriesDataSet)
countriesDataSet <- read.csv(countriesData, skip = 4, nrow = 190)
View(countriesDataSet)
names(countriesDataSet)<- c("CountryCode")
View(countriesDataSet)
table(countriesDataSet$CountryCode %in% eduDataSet$CountryCode)
countriesDataSet <- read.csv(countriesData, nrow = 190)
View(countriesDataSet)
countriesDataSet <- read.csv(countriesData)
View(countriesDataSet)
countriesDataSet <- read.csv(countriesData, skip = 4)
names(countriesDataSet)<- c("CountryCode")
table(countriesDataSet$CountryCode %in% eduDataSet$CountryCode)
countriesDataSet <- read.csv(countriesData, skip = 4, nrows = 191)
names(countriesDataSet)<- c("CountryCode")
table(countriesDataSet$CountryCode %in% eduDataSet$CountryCode)
View(countriesDataSet)
cleantable <- merge(countriesDataSet, eduDataSet, by="CountryCode", all=TRUE)
?merge
cleantable <- merge(countriesDataSet, eduDataSet, by="CountryCode", all=TRUE)
countriesDataSet <- read.csv(countriesData
)
View(countriesDataSet)
countriesDataSet <- read.csv(countriesData
)
View(countriesDataSet)
countriesDataSet <- read.csv(countriesData, skip = 4, nrows = 191)
View(countriesDataSet)
countriesDataSet <- read.csv(countriesData, skip = 4, nrows = 190)
View(countriesDataSet)
